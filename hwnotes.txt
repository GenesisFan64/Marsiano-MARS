LIST OF UNEMULATED 32X HARDWARE FEATURES, BUGS AND ERRORS, the ones marked with ** are probably wrong and need more testing.

-- General --
- ALL Emulators doesn't trigger the SH2's Error handlers (Address Error, Zero Divide, etc.)
- MOST Emulators doesn't SOFT reset like in hardware (only Picodrive does, and not even close): 68k resets like usual BUT the SH2 side doesn't fully restart: It triggers the VRES interrupt and keep going on return. (Commonly the code used here is just a jump to go back to the "HotStart" code.) ALL values will remain unmodified including comm's, unless 68k clears them first.
- The actual purpose of CACHE isn't emulated at all. so emulators just treat everything as "Cache-thru"
- The 4-byte LONG alignment limitation is ignored: If you forget to align your code or any array it will trigger an Address Error on real hardware.
- Fusion 3.64: VDPFILL might randomly get stuck waiting for the framebuffer-busy bit.
- Fusion 3.64: The mid-frame SuperVDP changes doesn't even work.

-- 68000 --
- Writing to the DREQ's FIFO only works properly on the $880000/$900000 areas. Doing the writes in the RAM area ($FF0000) will cause to miss some WORD writes during transfer
- RV bit: This bit sets the ROM map temporally to it's original location on the Genesis side as a workaround for the DMA's ROM-to-VDP transfers. (from $88xxxx/$9xxxxx to $0xxxxx, all 4MB visible area) If you do any Genesis DMA-transfer without setting this bit it will read trash data. (UNLESS it's from RAM, like the common Palette/Scroll/Sprite transfers.) Your Genesis DMA-to-VDP transfer routines MUST be located on RAM (recommended method) OR if you need to use the ROM area: just put the RV writes (on and off) AND the and last VDP write on the RAM area. For the SH2 side: If RV is set, any read from the ROM area will return trash data.
- If 68S is set to 0 in the middle of the SH2's DMA transfer of DREQ, it MIGHT crash the ENTIRE 32X add-on. **

-- SH2---
- The SDRAM, Framebuffer, ROM area and Cache run at different speeds for reading/writing and depending where the Program Counter (PC) is currently located. Cache being the fastest BUT with the lowest space to store code or data.
- BUS fighting: If any of the SH2 CPUs READ/WRITE the same location at the same time it will crash the add-on. Only tested on the SDRAM area but I believe the video and audio registers are affected too. only the comm's are safe for both sides (and Genesis too.) **
- After writing _DMAOPERATION to 1 (Starting the DMA), it takes a few instructions to start: add 2 nops in case you need to wait for the transfer to finish (reading bit 1 of _DMACHANNEL0)
- When DMA is active: If the DESTINATION section gets read or rewritten the transfer will end early or get cancelled.
- If DREQLEN gets modified during the DREQ transfer it will corrupt the output and probably freeze the entire 32X **
- When writing to the $A5xx part to $FFFFFE80 (WATCHDOG Control): If you don't include the required %00011000($18) bits, CPU crashes.
- If you use the DMA interrupt for transfering DREQ data: use a busy-check to synchronize the FIFO, if don't: the next DREQ writes will be written off-timed
- 16-byte transfers doesn't seem to work. **

-- SuperVDP --
- Writing pixels in to the framebuffer in BYTEs is slow. kinda like processing 6 NOPs on every pixel.
- If any entry of the linetable ends with $xxFF and the XShift video register is set to 1: that line will NOT get shifted.

-- PWM --
- It's 3-word FIFO isn't emulated properly, on emulators it behaves like a normal write-register. (I imagine...)
- Normally the output limit for both LEFT and RIGHT channels is 4095 ($0FFF) but depending of the speed of the PWM interrupt this value decreases: for example if the PWM interrupt is at 22050hz the limit now is 1023 ($03FF)

--- Both sides ---
- FM bit: This bit tells which system side (Genesis or 32X) can read/write to the SuperVDP (The Framebuffer and 256-color palette, EXCEPT the registers), If a CPU with NO permission touches the SuperVDP it will freeze the entire system (either Genesis 68K or 32X SH2).

A prebuilt binary is located in the /out folder (rom_mars.bin) for testing, works on any Genesis/MD flashcart WITH the 32X inserted. ROM is for NTSC systems, can be played on PAL but with slowdown.
If it doesn't boot or it freezes: I probably broke something without testing on HW

For more info check the official hardware manual (32X Hardware Manual.pdf)
